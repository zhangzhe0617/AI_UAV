1. FlightLog2文件夹中是上一周任务的改进版，其中数据由列表存储改进为字典存储，速度有较大提升。
   目前在不输出原始数据的情况下，大约10几秒就可处理完一个文件。
   由于这周学校的学习任务比较重，所以没有进一步研究python多线程技术，所以没能进一步优化代码，打算在之后完成这项工作。
   
2. 感知机文件夹中为本周的任务：
   LogicOperation.py用神经元实现逻辑与和或的运算，并以此为基础搭建简单的神经网络实现逻辑异或的功能。
   
   BinaryClassification.py用感知机模型实现对输入数据的二分类：根据当前模型输出与实际结果的误差，动态地调整模型的参数。
   
   GradientDescent.py使用梯度下降法对输入数据进行二分类：通过计算损失函数的梯度来找到减小误差的最快方向；
					 由于输入数据不一定是线性可分的，所以算法在实际应用时不一定是收敛的；但实际上我们不需要算法必须收敛，
					 只要满足实际应用的精度要求即可，所以我们通过设置迭代次数来使误差达到我们需要的精度范围。
					 
   AdmissionPrediction.py使用梯度下降法对输入数据的标签进行预测，本题中输入数据的特征数量增加，因此权值向量的位置相应增加，
						 但算法的基本原理和实现过程和之前并没有区别。同时在本题中，将初始的数据集划分为训练集和测试集，
						 通过对模型误差的跟踪，判断当前的模型参数是否满足要求，从而决定是否终止参数的修正。
						 本题完成了对模型训练和测试的完整过程；
	
	由于之前没有相关的数据处理经验，所以作业代码中数据预处理和结果可视化的部分基本沿用了参考代码，自己主要工作是模型训练部分。
	之后，自己会学习数据处理和可视化方面的内容。